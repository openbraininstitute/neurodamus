name: Build coverage reports

on:
    pull_request:
    push:
      branches:
        - main

jobs:
  coverage:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-15]
      fail-fast: false

    steps:

    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libopenmpi-dev openmpi-bin
        echo $MPIEXEC
        mpicc -o mpi_hello_world mpi_hello_world.c
        mpiexec -n 2 -v ./mpi_hello_world
    
    - name: Upgrade pip and install base Python packages
      run: |
        pip install mpi4py
        python -c "from mpi4py import MPI"
        mpiexec -n 2 python mpi_hello_world.py

    # - name: Add virtual environment to PATH
    #   run: echo "${{ github.workspace }}/venv/bin" >> $GITHUB_PATH

    # - name: Install test dependencies
    #   run: |
    #     python -m pip install --upgrade pip tox



    # - name: Run tox baseline
    #   run: |
    #     tox -e baseline

    # - name: Coveralls
    #   if: ${{ matrix.os == 'ubuntu-latest' }}
    #   uses: coverallsapp/github-action@v2
    #   with:
    #     flag-name: baseline

    # - name: Run tox unit
    #   run: |
    #     rm -rf .coverage
    #     tox -e unit

    # - name: Coveralls
    #   if: ${{ matrix.os == 'ubuntu-latest' }}
    #   uses: coverallsapp/github-action@v2
    #   with:
    #     flag-name: unit

    # - name: Test raw MPI call
    #   run: |
    #     python -c "from mpi4py import MPI"
    #     mpiexec -n 2 python mpi_hello_world.py

    # - name: Tox raw MPI test
    #   run: tox -e removeme

    # - name: Run tox unit-mpi
    #   run: |
    #     rm -rf .coverage
    #     tox -e unit-mpi

    # - name: Coveralls
    #   if: ${{ matrix.os == 'ubuntu-latest' }}
    #   uses: coverallsapp/github-action@v2
    #   with:
    #     flag-name: unit-mpi
