name: neurodamus build and test
on:
  schedule:
    # every evening at 20:00 UTC
    - cron: '0 20 * * *'
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      NEURON_BRANCH:
        description: 'NEURON branch to use'
        required: false
      LIBSONATA_REPORT_BRANCH:
        description: 'libsonatareport branch to use'
        required: false
      LIBSONATA_BRANCH:
        description: 'libsonata branch to use'
        required: false
      NEURODAMUS_MODELS_BRANCH:
        description: 'neurodamus-models branch to use'
        required: false

env:
  NEURON_COMMIT_ID: 'c48d7d5'
  RDMAV_FORK_SAFE: '1'
  VENV_PATH: /home/runner/work/neurodamus/neurodamus/venv/

jobs:
  simulation:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04]
        python-version: ['3.9.20', '3.10.15', '3.11.10', '3.12.6']
    steps:
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Checkout neurodamus repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ matrix.os }}-pip-${{ matrix.python-version }}-v1
        restore-keys: |
          ${{ matrix.os }}-pip-

    - name: Get latest tags
      run: |
        echo "NEURON_BRANCH=${{ inputs.NEURON_BRANCH || github.event.inputs.NEURON_BRANCH || 'master' }}" >> $GITHUB_ENV

        LIBSONATA_LATEST=$(curl -s https://api.github.com/repos/openbraininstitute/libsonata/tags | jq -r '.[0].name')
        echo "LIBSONATA_BRANCH=${{ inputs.LIBSONATA_BRANCH || github.event.inputs.LIBSONATA_BRANCH || '$LIBSONATA_LATEST' }}" >> $GITHUB_ENV

        LIBSONATA_REPORT_LATEST=$(curl -s https://api.github.com/repos/openbraininstitute/libsonatareport/tags | jq -r '.[0].name')
        echo "LIBSONATA_REPORT_BRANCH=${{ inputs.LIBSONATA_REPORT_BRANCH || github.event.inputs.LIBSONATA_REPORT_BRANCH || '$LIBSONATA_REPORT_LATEST' }}" >> $GITHUB_ENV

        NEURODAMUS_MODELS_LATEST=$(curl -s https://api.github.com/repos/openbraininstitute/neurodamus-models/tags | jq -r '.[0].name')
        echo "NEURODAMUS_MODELS_BRANCH=${{ inputs.NEURODAMUS_MODELS_BRANCH || github.event.inputs.NEURODAMUS_MODELS_BRANCH || '$NEURODAMUS_MODELS_LATEST' }}" >> $GITHUB_ENV

    - name: Get HEAD commit message and look for branches
      run: |
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)

        echo $COMMIT_MESSAGE

        NEURON_BRANCH=$(echo $COMMIT_MESSAGE | grep -Po 'NEURON_BRANCH=\K[0-9a-zA-Z/_.\-]*' || true)
        if [[ ! -z $NEURON_BRANCH ]]; then echo "NEURON_BRANCH=$NEURON_BRANCH" >> $GITHUB_ENV; fi

        LIBSONATA_REPORT_BRANCH=$(echo $COMMIT_MESSAGE | grep -Po 'LIBSONATA_REPORT_BRANCH=\K[0-9a-zA-Z/_.\-]*' || true)
        if [[ ! -z $LIBSONATA_REPORT_BRANCH ]]; then echo "LIBSONATA_REPORT_BRANCH=$LIBSONATA_REPORT_BRANCH" >> $GITHUB_ENV; fi

        LIBSONATA_BRANCH=$(echo $COMMIT_MESSAGE | grep -Po 'LIBSONATA_BRANCH=\K[0-9a-zA-Z/_.\-]*' || true)
        if [[ ! -z $LIBSONATA_BRANCH ]]; then echo "LIBSONATA_BRANCH=$LIBSONATA_BRANCH" >> $GITHUB_ENV; fi

    - name: Install system dependencies
      run: |
        source ./ci/build-dependencies.sh
        sudo apt-get update
        sudo bash -c "$(declare -f install-apt-dependencies); install-apt-dependencies"

    - name: Cache python virtual env
      id: cache-venv
      uses: actions/cache@v3
      env:
        cache-name: cache-venv
      with:
        path: /venv/
        key: ${{ matrix.os }}-libsonata-${{ env.LIBSONATA_BRANCH }}-py${{ matrix.python-version }}

    - name: Upgrade pip and install base Python packages
      if: steps.cache-venv.outputs.cache-hit != 'true'
      run: |
        python -m venv $VENV_PATH
        . $VENV_PATH/bin/activate
        source ./ci/build-dependencies.sh
        install-python-dependencies

    - name: Add virtual environment to PATH
      run: |
        echo "$VENV_PATH/bin/" >> $GITHUB_PATH

    - name: Build h5py with the local hdf5
      run: |
        source ./ci/build-dependencies.sh
        source $VENV_PATH/bin/activate

        build-h5py

    - name: Install libsonata
      if: steps.cache-venv.outputs.cache-hit != 'true'
      run: |
        source ./ci/build-dependencies.sh
        source $VENV_PATH/bin/activate

        build-libsonata "${{ env.LIBSONATA_BRANCH }}"

    - name: Cache libsonatareport
      id: cache-libsonatareport
      uses: actions/cache@v3
      env:
        cache-name: cache-libsonatareport
      with:
        path: libsonatareport
        key: ${{ matrix.os }}-libsonatareport-${{ env.LIBSONATA_REPORT_BRANCH }}-py${{ matrix.python-version }}

    - name: Install libsonatareport
      if: steps.cache-libsonatareport.outputs.cache-hit != 'true'
      run: |
        source ./ci/build-dependencies.sh
        build-libsonatareport ${{ env.LIBSONATA_REPORT_BRANCH }}

    - name: Cache NEURON
      id: cache-neuron
      uses: actions/cache@v3
      env:
        cache-name: cache-neuron
      with:
        path: nrn
        key: ${{ matrix.os }}-neuron-${{ env.NEURON_BRANCH }}-${{ env.NEURON_COMMIT_ID }}-py${{ matrix.python-version }}

    - name: Install NEURON
      if: steps.cache-neuron.outputs.cache-hit != 'true'
      run: |
        source ./ci/build-dependencies.sh
        source $VENV_PATH/bin/activate
        build-neuron ${{ env.NEURON_BRANCH }} ${{ env.NEURON_COMMIT_ID }}

    - name: Install neurodamus
      run: |
        source $VENV_PATH/bin/activate
        pip install .[full]

    - name: Build neocortex models
      run: |
        source ./ci/build-dependencies.sh
        build-neocortex-models ${{ env.NEURODAMUS_MODELS_BRANCH }} 

        # Build neocortex-multiscale model
        build-neocortex-multiscale-models ${{ env.NEURODAMUS_MODELS_BRANCH }} 

    - name: load neocortex model
      run: |
        export PYTHONPATH=$(pwd)/nrn/build/install/lib/python:$PYTHONPATH
        export HOC_LIBRARY_PATH=$NEURODAMUS_NEOCORTEX_ROOT/share/neurodamus_neocortex/hoc
        export NEURODAMUS_PYTHON=$(pwd)/neurodamus/data
        export CORENEURONLIB=$NEURODAMUS_NEOCORTEX_ROOT/lib/libcorenrnmech.so
        export NRNMECH_LIB_PATH=$NEURODAMUS_NEOCORTEX_ROOT/lib/libnrnmech.so
        export PATH=$NEURODAMUS_NEOCORTEX_ROOT/bin:$PATH

        echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV;
        echo "HOC_LIBRARY_PATH=$HOC_LIBRARY_PATH" >> $GITHUB_ENV;
        echo "CORENEURONLIB=$CORENEURONLIB" >> $GITHUB_ENV;
        echo "NRNMECH_LIB_PATH=$NRNMECH_LIB_PATH" >> $GITHUB_ENV;
        echo "NEURODAMUS_PYTHON=$NEURODAMUS_PYTHON" >> $GITHUB_ENV;

        which special

        # launch simulation with NEURON
        cd tests/simulations/usecase3/
        mpirun -np 2 special -mpi -python $NEURODAMUS_PYTHON/init.py --configFile=simulation_sonata.json
        ls reporting/*.h5
        # launch simulation with CORENEURON
        mpirun -np 2 special -mpi -python $NEURODAMUS_PYTHON/init.py --configFile=simulation_sonata_coreneuron.json
        ls reporting_coreneuron/*.h5

    - name: Install test dependencies
      run: |
        pip install -r tests/requirements.txt

    - name: test-integration
      run: |
        pytest -x --forked tests/integration

    - name: test-integration-e2e
      run: |
        pytest -s -x --forked --durations=5 --durations-min=15 tests/integration-e2e

    - name: test-scientific
      run: |
        pytest -s -x --forked --durations=5 --durations-min=15 tests/scientific

    - name: test-scientific-ngv
      run: |
        export HOC_LIBRARY_PATH=$NEURODAMUS_NEOCORTEX_MULTISCALE_ROOT/share/neurodamus_neocortex/hoc
        export NRNMECH_LIB_PATH=$NEURODAMUS_NEOCORTEX_MULTISCALE_ROOT/lib/libnrnmech.so
        unset CORENEURONLIB
        pytest -s -x --forked --durations=5 --durations-min=15 tests/scientific-ngv

    # - name: live debug session, comment out
    #   if: failure()
    #   uses: mxschmitt/action-tmate@v3
    #   with:
    #    timeout-minutes: 60  # or any other value you need
