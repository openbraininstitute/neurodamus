[base]
name = neurodamus

[tox]
envlist = flake8, format, test-unit, test-baseline, test-integration, test-integration-e2e, scientific, scientific-ngv

[testenv]
deps =
    -r tests/requirements.txt

[testenv:clean]
skip_install = true
allowlist_externals = sh
commands =    
    sh -c "rm -rf *.log allocation*.pkl.gz cell_memory_usage.json mcomplex.dat memory_per_metype.json .coverage sim_conf tests/simulations/usecase3/*.json.SUCCESS tests/simulations/v5_gapjunctions/output tests/simulations/v5_gapjunctions/simulation_config.json.SUCCESS tests/simulations/v5_sonata/output_sonata2 tests/simulations/v5_sonata/simulation_config_mini.json.SUCCESS"

[testenv:test-unit]
deps =
    {[testenv]deps}
    pytest-cov
commands =
    pytest --cov=neurodamus --cov-report=term-missing tests/unit

[testenv:test-baseline]
deps =
    {[testenv]deps}
    pytest-cov
commands =
    pytest --cov=neurodamus --cov-report=term-missing tests/test_import.py

[testenv:test-integration]
deps =
    {[testenv]deps}
    pytest-cov
    neuron
    morphio
setenv =
    NEURON_INIT_MPI=0
allowlist_externals =
    {toxinidir}/ci/build_ndcore.sh
    sh
commands =
    {toxinidir}/ci/build_ndcore.sh {toxinidir}/neurodamus/data {toxworkdir}
    sh -c ". {toxworkdir}/.envfile && pytest -x --cov=neurodamus --cov-report=term-missing tests/integration"

[testenv:test-integration-e2e]
# Please you need to spack load neurodamus-models model=neocortex +coreneuron or use an equivalent spack virtual env
passenv = *
setenv =
    PYTHONPATH={toxinidir}:{env:PYTHONPATH}
    HOC_LIBRARY_PATH={toxinidir}/neurodamus/data/hoc:{env:HOC_LIBRARY_PATH}
    NEURON_INIT_MPI=1
commands =
    python -c "import os; print(os.environ.get('HOC_LIBRARY_PATH', ''))"
    pytest -s -x --forked --durations=5 --durations-min=15 {posargs:tests/integration-e2e}

[testenv:test-scientific]
# Please you need to spack load neurodamus-models model=neocortex +coreneuron or use an equivalent spack virtual env
passenv = *
setenv =
    PYTHONPATH={toxinidir}:{env:PYTHONPATH}
    HOC_LIBRARY_PATH={toxinidir}/neurodamus/data/hoc:{env:HOC_LIBRARY_PATH}
    NEURON_INIT_MPI=1
commands =
    python -c "import os; print(os.environ.get('HOC_LIBRARY_PATH', ''))"
    pytest -s -x --forked --durations=5 --durations-min=15 {posargs:tests/scientific}
    

[testenv:test-scientific-ngv]
# Please you need to spack load neurodamus-models model=neocortex +ngv+metabolism or use an equivalent spack virtual env
deps =
    {[testenv]deps}
    morphio
passenv = *
setenv =
    PYTHONPATH={toxinidir}:{env:PYTHONPATH}
    HOC_LIBRARY_PATH={toxinidir}/neurodamus/data/hoc:{env:HOC_LIBRARY_PATH}
    NEURON_INIT_MPI=1
commands =
    python -c "import os; print(os.environ.get('HOC_LIBRARY_PATH', ''))"
    pytest -s -x --forked --durations=5 --durations-min=15 {posargs:tests/scientific-ngv}

[testenv:flake8]
changedir = {toxinidir}
deps = flake8-pyproject
skip_install = True
commands = flake8

[testenv:lint]
skip_install = True
deps =
    ruff
commands =
    ruff format --check neurodamus
    ruff check neurodamus

[testenv:format]
skip_install = True
deps =
    ruff
commands =
    ruff format neurodamus
    ruff check --fix neurodamus

[testenv:docs]
changedir = docs
extras = docs
commands =
    make clean
    make html SPHINXOPTS=-W  # make warnings into errors with -W sphinx option
allowlist_externals = make
